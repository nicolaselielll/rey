$bp-xl: 1248px;
$bp-lg: 960px;
$bp-md: 820px;
$bp-sm: 600px;
$bp-xs: 400px;

$primary-type: PP Mori;
$secondary-type: PP Mori;

// COLORS

$primary: #000;
$dominant: #FFF;
$accent: #FE0100;

$success: #09F069;
$success-alt-1: rgba($success, .1);
$error: #D92B2B;
$error-alt-1: rgba($error, .1);

$alt-1-o: .5;
$alt-2-o: .08;
$alt-3-o: .06;
$alt-4-o: .03;

$alt-1: rgba($primary, $alt-1-o);
$alt-2: rgba($primary, $alt-2-o);
$alt-3: rgba($primary, $alt-3-o);
$alt-4: rgba($primary, $alt-4-o);

$border: $alt-3;

html, body {
    background-color: $dominant;
    color: $primary;
}

$large-base-px: 20;

// 16px at 1512px vw
$desktop-screen: 1512;
$desktop-base-px: 16;
$desktop-base-font-size: calc($desktop-base-px / $desktop-screen * 100); // VW

// 16px at 700px vw
$tablet-screen: 700;
$tablet-base-px: 16;
$tablet-base-font-size: calc($tablet-base-px / $tablet-screen * 100); // VW

// 16px at 402px vw
$mobile-screen: 402;
$mobile-base-px: 16;
$mobile-base-font-size: calc($mobile-base-px / $mobile-screen * 100); // VW

// BREAKPOINTS

@mixin bp-xl {
    @media screen and (max-width: $bp-xl) {
        @content;
    }
}

@mixin bp-lg {
    @media screen and (max-width: $bp-md) {
        @content;
    }
}

@mixin bp-md {
    @media screen and (max-width: $bp-md) {
        @content;
    }
}

@mixin bp-sm {
    @media screen and (max-width: $bp-sm) {
        @content;
    }
}

@mixin bp-xs {
    @media screen and (max-width: $bp-xs) {
        @content;
    }
}

@mixin bp-custom($bp) {
    @media screen and (max-width: $bp) {
        @content;
    }
}

@function rem-to-vw($rem) {
    @return (1vw * $desktop-base-font-size) * $rem;
}

@mixin isTouch {
    @media (pointer:coarse) {
        @content
    }
}

/* html {
    // Stop growing font size when 1vw equals $large-base-px
    font-size: min(calc(1vw * $desktop-base-font-size), 1px * $large-base-px);
} */

html {
    font-size: $desktop-base-px;
}

@include bp-xl {
    html {
        font-size: $desktop-base-px
    }
}

@include bp-lg {
    html {
        font-size: calc(1vw * $tablet-base-font-size);
    }
}

@include bp-sm {
    html {
        font-size: calc(1vw * $mobile-base-font-size);
    }
}

// PX TO REM

@function rem-d($px) {
    @return calc(1rem * (($px / $desktop-screen * 100) / $desktop-base-font-size));
}
@function rem-t($px) {
    @return calc(1rem * (($px / $tablet-screen * 100) / $tablet-base-font-size));
}
@function rem-m($px) {
    @return calc(1rem * (($px / $mobile-screen * 100) / $mobile-base-font-size));
}

// FONT SIZE

// Convert the pixel amount to vw and then to rem
@mixin d-size($px) {
    font-size: rem-d($px);
}
@mixin t-size($px) {
    @include bp-lg {
        font-size: rem-t($px);
    }
}
@mixin m-size($px) {
    @include bp-sm {
        font-size: rem-m($px);
    }
}

// SPACING

$space-lg: 1rem; // 14px
$space-md: .625rem; // 10px
$space-sm: .5rem; // 8px

// PADDING

@mixin padding($direction: all, $size: $space-lg) {
    @if $direction == all {
        padding: $size;
    } @else if $direction == x {
        padding-left: $size;
        padding-right: $size;
    } @else if $direction == y {
        padding-top: $size;
        padding-bottom: $size;
    } @else if $direction == top {
        padding-top: $size;
    } @else if $direction == right {
        padding-right: $size;
    } @else if $direction == bottom {
        padding-bottom: $size;
    } @else if $direction == left {
        padding-left: $size;
    }
}

// MARGIN

@mixin margin($direction: all, $size: $space-lg) {
    @if $direction == all {
        margin: $size;
    } @else if $direction == x {
        margin-left: $size;
        margin-right: $size;
    } @else if $direction == y {
        margin-top: $size;
        margin-bottom: $size;
    } @else if $direction == top {
        margin-top: $size;
    } @else if $direction == right {
        margin-right: $size;
    } @else if $direction == bottom {
        margin-bottom: $size;
    } @else if $direction == left {
        margin-left: $size;
    }
}

// BORDER RADIUS

$radius-lg: 1.0625rem;
$radius-md: 0.8125rem;
$radius-sm: 0.4375rem;

// Radius MD
@mixin radius($direction: all, $size: $radius-lg) {
    @if $direction == all {
        border-radius: $size;
    } @else if $direction == left {
        border-top-left-radius: $size;
        border-bottom-left-radius: $size;
    } @else if $direction == right {
        border-top-right-radius: $size;
        border-bottom-right-radius: $size;
    } @else if $direction == top {
        border-top-left-radius: $size;
        border-top-right-radius: $size;
    } @else if $direction == bottom {
        border-bottom-left-radius: $size;
        border-bottom-right-radius: $size;
    }
}