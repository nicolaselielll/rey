$bp-xl: 1512px;
$bp-lg: 960px;
$bp-md: 820px;
$bp-sm: 600px;
$bp-xs: 400px;

// TYPES

$primary-type: DM Sans;
$secondary-type: DM Sans;

// COLORS

$accent: #FD5A1E;
$dominant: #000;
$complementary: #FFF;
$border: rgba($dominant, .1);

$additional-1: rgba($dominant, .8);
$additional-2: rgba($dominant, .6);
$additional-3: rgba($dominant, .3);
$additional-4: rgba($dominant, .04);

html, body {
    background-color: $dominant;
    color: $complementary;
}

$large-base-px: 20;

// 16px at 1512px vw
$desktop-screen: 1512;
$desktop-base-px: 16;
$desktop-base-font-size: calc($desktop-base-px / $desktop-screen * 100); // VW

// 16px at 700px vw
$tablet-screen: 700;
$tablet-base-px: 16;
$tablet-base-font-size: calc($tablet-base-px / $tablet-screen * 100); // VW

// 16px at 390px vw
$mobile-screen: 390;
$mobile-base-px: 16;
$mobile-base-font-size: calc($mobile-base-px / $mobile-screen * 100); // VW

// BREAKPOINTS

@mixin bp-xl {
    @media screen and (max-width: $bp-xl) {
        @content;
    }
}

@mixin bp-lg {
    @media screen and (max-width: $bp-lg) {
        @content;
    }
}

@mixin bp-md {
    @media screen and (max-width: $bp-md) {
        @content;
    }
}

@mixin bp-sm {
    @media screen and (max-width: $bp-sm) {
        @content;
    }
}

@mixin bp-xs {
    @media screen and (max-width: $bp-xs) {
        @content;
    }
}

@mixin bp-custom($bp) {
    @media screen and (max-width: $bp) {
        @content;
    }
}

@function rem-to-vw($rem) {
    @return (1vw * $desktop-base-font-size) * $rem;
}

/* html {
    font-size: $desktop-base-px;
} */

html {
    // Stop growing font size when 1vw equals $large-base-px
    font-size: min(calc(1vw * $desktop-base-font-size), 1px * $large-base-px);
}

@include bp-xl {
    html {
        font-size: calc(1vw * $desktop-base-font-size);
    }
}

@include bp-lg {
    html {
        font-size: calc(1vw * $tablet-base-font-size);
    }
}

@include bp-sm {
    html {
        font-size: calc(1vw * $mobile-base-font-size);
    }
}

// PX TO REM

@function rem-d($px) {
    @return calc(1rem * (($px / $desktop-screen * 100) / $desktop-base-font-size));
}
@function rem-t($px) {
    @return calc(1rem * (($px / $tablet-screen * 100) / $tablet-base-font-size));
}
@function rem-m($px) {
    @return calc(1rem * (($px / $mobile-screen * 100) / $mobile-base-font-size));
}

// FONT SIZE

// Convert the pixel amount to vw and then to rem
@mixin d-size($px) {
    font-size: rem-d($px);
}
@mixin t-size($px) {
    @include bp-lg {
        font-size: rem-t($px);
    }
}
@mixin m-size($px) {
    @include bp-sm {
        font-size: rem-m($px);
    }
}

// GAP

$gap: 1.25rem;

// PADDINGS

// padding-lg

$desktop-padding-lg-amount: 6; 
$desktop-padding: 6rem;
$mobile-padding: 1rem;

@mixin padding {
    padding: $desktop-padding;

    @media screen and (max-width: $bp-lg) {
        padding: $mobile-padding;
    }
}

.padding {
    @include padding;
}

@mixin padding-x {
    padding: 0 $desktop-padding;

    @media screen and (max-width: $bp-lg) {
        padding: 0 $mobile-padding;
    }
}
.padding-x {
    @include padding-x;
}

@mixin padding-y {
    padding: $desktop-padding 0;

    @media screen and (max-width: $bp-lg) {
        padding: $mobile-padding 0;
    }
}
.padding-y {
    @include padding-y;
}

@mixin padding-right {
    padding-right: $desktop-padding;

    @media screen and (max-width: $bp-lg) {
        padding-right: $mobile-padding;
    }
}
.padding-right {
    @include padding-right;
}

@mixin padding-left {
    padding-left: $desktop-padding;

    @media screen and (max-width: $bp-lg) {
        padding-left: $mobile-padding;
    }
}
.padding-left {
    @include padding-left;
}

@mixin padding-top {
    padding-top: $desktop-padding;

    @media screen and (max-width: $bp-lg) {
        padding-top: $mobile-padding;
    }
}
.padding-top {
    @include padding-top;
}

@mixin padding-bottom {
    padding-bottom: $desktop-padding;

    @media screen and (max-width: $bp-lg) {
        padding-bottom: $mobile-padding;
    }
}
.padding-bottom {
    @include padding-bottom;
}

// BORDER RADIUS

$radius: .375rem;
$radius-mobile: .375rem;

@mixin radius {
    border-radius: $radius;

    @media screen and (max-width: $bp-lg) {
        border-radius: $radius-mobile;
    }
}
.radius {
    @include radius;
}

@mixin radius-top {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;

    @media screen and (max-width: $bp-lg) {
        border-top-left-radius: $radius-mobile;
        border-top-right-radius: $radius-mobile;
    }
}

@mixin radius-bottom {
    border-bottom-left-radius: $radius;
    border-bottom-right-radius: $radius;

    @media screen and (max-width: $bp-lg) {
        border-bottom-left-radius: $radius-mobile;
        border-bottom-right-radius: $radius-mobile;
    }
}

$radius-sm: 1.250rem;
$radius-mobile-sm: 1.428rem;

@mixin radius-sm {
    border-radius: $radius-sm;

    @media screen and (max-width: $bp-lg) {
        border-radius: $radius-mobile-sm;
    }
}

@mixin radius-top-sm {
    border-top-left-radius: $radius-sm;
    border-top-right-radius: $radius-sm;

    @media screen and (max-width: $bp-lg) {
        border-top-left-radius: $radius-mobile-sm;
        border-top-right-radius: $radius-mobile-sm;
    }
}

@mixin radius-bottom-sm {
    border-bottom-left-radius: $radius-sm;
    border-bottom-right-radius: $radius-sm;

    @media screen and (max-width: $bp-lg) {
        border-bottom-left-radius: $radius-mobile-sm;
        border-bottom-right-radius: $radius-mobile-sm;
    }
}

// CONTAINERS

$erotus: calc($large-base-px - $desktop-base-px); // 4px // The difference between the large px and base font size
$prosentti: calc($erotus / $desktop-base-px); // 25% // The percentage of the difference when $desktop-screen is 100%
$screenwidth: calc(1px * ($desktop-screen + ($desktop-screen * $prosentti))); // 1890px // Now add the difference percentage to the $desktop-screen and you get the screen width where the font stops growing

.container-lg {
    margin: 0 auto;
    max-width: calc($screenwidth - ($desktop-padding * 2));
}